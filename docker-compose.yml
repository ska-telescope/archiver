#
# Docker compose file for TANGO database and database device server
#
# Defines:
#   - tangodb: MariaDB database with TANGO schema
#   - databaseds: TANGO database device server
#
# Requires:
#   - None
#
version: '2'
volumes:
  tangodb: {}

services:
  tangodb:
    image: nexus.engageska-portugal.pt/ska-docker/tango-db:latest
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}tangodb
    environment:
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_DATABASE=tango
      - MYSQL_USER=tango
      - MYSQL_PASSWORD=tango
    volumes:
      - tangodb:/var/lib/mysql

  databaseds:
    image: nexus.engageska-portugal.pt/ska-docker/tango-cpp:latest
    depends_on:
      - tangodb
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}databaseds
    environment:
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_DATABASE=tango
      - MYSQL_USER=tango
      - MYSQL_PASSWORD=tango
      - TANGO_HOST=${TANGO_HOST}
    entrypoint:
      - /usr/local/bin/wait-for-it.sh
      - ${MYSQL_HOST}
      - --timeout=30
      - --strict
      - --
      - /usr/local/bin/DataBaseds
      - "2"
      - -ORBendPoint
      - giop:tcp::10000

  dsconfig:
    image: nexus.engageska-portugal.pt/ska-docker/tango-dsconfig:latest
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}dsconfig
    depends_on:
      - databaseds
    environment:
      - TANGO_HOST=${TANGO_HOST}
    command: >
      sh -c "wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
             json2tango -w -a -u /tango-example/data/devices.json  &&
             sleep infinity"
    volumes:
      - .:/tango-example

#  dsconfigdump:
#    image: nexus.engageska-portugal.pt/ska-docker/tango-dsconfig:latest
#    network_mode: ${NETWORK_MODE}
#    container_name: ${CONTAINER_NAME_PREFIX}dsconfigdump
#    depends_on:
#      - databaseds
#    environment:
#      - TANGO_HOST=${TANGO_HOST}
#    command: >
#      sh -c "wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
#             python -m dsconfig.dump && sleep infinity"
#    volumes:
#      - .:/tango-example

  cassandra:
      image: cassandra:2.2.14
      network_mode: ${NETWORK_MODE}
      container_name: cassandra
      ports:
        - "9042:9042"
      environment:
        - CASSANDRA_HOME="/apache-cassandra-2.2.14"
        - CASSANDRA_START_RPC=true
      volumes:
        - ./out/cassandra_data:/var/lib/cassandra
#        - /path/to/cassandra.yaml:/bitnami/cassandra/conf/cassandra.yaml:ro
#      entrypoint:
#        - /apache-cassandra-2.2.11/bin/cassandra.sh
#        - ./apache-cassandra-2.2.14/bin/cassandra.sh #&& cqlsh -u cassandra -p cassandra -e describe keyspaces
#        cqlsh -u cassandra -p cassandra -e describe keyspaces
#      healthcheck:
#        test: ["CMD", "cqlsh", "-u cassandra", "-p cassandra" ,"-e describe keyspaces"]
#        interval: 15s
#        timeout: 10s
#        retries: 10

#  cassandra-load-keyspace:
#      image: cassandra:2.2.14
#      network_mode: ${NETWORK_MODE}
#      container_name: cassandra-load-keyspace
#      depends_on:
#        - cassandra
#      environment:
#        - CASSANDRA_CONTACT_POINTS=cassandra
#      volumes:
#        - ./data/create_hdb_cassandra.cql:/create_hdb_cassandra.cql
#      command:
#        sh -c "sleep 60 && cqlsh -f /create_hdb_cassandra.cql"


  hdbpp-es:
    image: archiver:latest
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}hdbpp-es
    depends_on:
      - databaseds
      - dsconfig
      - cassandra
    environment:
      - TANGO_HOST=${TANGO_HOST}
      - HdbManager=archiving/hdbpp/confmanager01
      - HDB_TYPE=cassandra
      - HDB_NAME=hdb
    command: >
      /bin/bash -c "
        echo HELLO!!!;
        sleep 50;
        wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
             /hdb++/hdbpp-es/bin/HdbEventSubscriber 01"

  hdbpp-cm:
    image: archiver:latest
    network_mode: ${NETWORK_MODE}
    container_name: ${CONTAINER_NAME_PREFIX}hdbpp-cm
    depends_on:
      - databaseds
      - dsconfig
      - cassandra
    environment:
      - TANGO_HOST=${TANGO_HOST}
      - HdbManager=archiving/hdbpp/confmanager01
      - HDB_TYPE=cassandra
      - HDB_NAME=hdb
    command: >
        /bin/bash -c "
          echo HELLO!!!;
          sleep 50;
          wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
               /hdb++/hdbpp-cm/bin/HdbConfigurationManager 01"

#  powersupply:
#    image: nexus.engageska-portugal.pt/tango-example/tango-example:latest
#    network_mode: ${NETWORK_MODE}
#    container_name: ${CONTAINER_NAME_PREFIX}powersupply
#    depends_on:
#      - dsconfig
#    environment:
#      - TANGO_HOST=${TANGO_HOST}
#    command: >
#      sh -c "wait-for-it.sh ${TANGO_HOST} --timeout=30 --strict --
#             /venv/bin/python /app/powersupply/powersupply.py test"